% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FSDTModule.R
\name{createFSTable}
\alias{createFSTable}
\title{Convert cells in a data frame to HTML text}
\usage{
createFSTable(df, id, row_type, row_format_rule = "default", row_css,
  color_negative = TRUE)
}
\arguments{
\item{df}{a data frame}

\item{id}{id columns for the data frame. Columns other than id columns must be
numeric}

\item{row_type}{a character vector, its length must equal to number of rows in
df. Types for each row,valid choices are "currency","percent", "comma" and 
"accounting". To add more valid choices, 
modify \code{row_format_rule}}

\item{row_format_rule}{when set to \code{default}, will use default rules. To
customize it, see details section.}

\item{row_css}{a data frame, it must have the same number of rows as df. column
names should be valid css attributes. columns must contain valid values for 
corresponding attributes.}

\item{color_negative}{default to \code{TRUE}, whether to color numbers smaller
than 0 to red}
}
\value{
a data frame, cells contains HTML text, which can be parsed by 
\code{\link{DT::datatable}}
}
\description{
This function is useful for creating visually pleasing Financial Statement 
using the DT Package. Features of this function:

1. numbers are formatted by row by providing row_type vector. supported formats
are currecny, percent, comma and accounting. This feature makes use of formattable
package.

2. negative numbers can be colored coded to red if color_negative is \code{TRUE}

3. supports all css of div tag by surrounding text with 
\code{<div class="...">your-text</div>}.
}
\details{
1.row_format_rule:

When \code{row_format_rule} is \code{default}, it will use the rules in
\code{link{FSDTSampleData}}.

Now this function supports four formats, which are "currency","percent","comma" 
and "accounting", it uses functions in formattable package. To customize rules, 
you must provide a list with the four type names as key. For each key value pair,
the value must also be a list with keyword, digits as key. When setting up "currency",
you can also use "symbol" as key.

A valid rule should look like \code{list(
   currency = list(keywords = c("Dollar","amount","currency"), digits = 2, symbol = "$"),
   percent = list(keyword = c("percent","percentage"),digits = 2),
   ... etc
)}
}
\seealso{
\code{\link{FSDTSampleData}}
}
